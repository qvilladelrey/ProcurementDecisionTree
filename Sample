<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Decision Tree for Modes of Procurement</title>
<style>
  body {
    font-family: Arial, sans-serif;
    background: url('https://raw.githubusercontent.com/yourusername/your-repo/main/background.jpg') no-repeat center center fixed;
    background-size: cover;
    margin: 0;
    color: #333;
  }

  .decision-container {
    max-width: 700px;
    margin: 50px auto;
    background: rgba(255, 255, 255, 0.9);
    padding: 30px;
    border-radius: 15px;
    box-shadow: 0 4px 15px rgba(0,0,0,0.3);
    text-align: center;
  }

  h1 {
    color: #2c3e50;
  }

  .progress-bar {
    width: 100%;
    background-color: #ddd;
    border-radius: 10px;
    margin-bottom: 20px;
  }

  .progress-fill {
    height: 10px;
    width: 0%;
    background-color: #3498db;
    border-radius: 10px;
    transition: width 0.4s ease;
  }

  .options {
    display: flex;
    flex-direction: column;
    gap: 15px;
    margin-top: 20px;
    align-items: center;
    justify-content: center;
  }

  .option-button {
    background-color: #3498db;
    color: white;
    border: none;
    padding: 12px 25px;
    border-radius: 8px;
    cursor: pointer;
    font-size: 16px;
    transition: all 0.3s ease;
    width: 200px;
  }

  .option-button:hover {
    background-color: #2980b9;
    transform: scale(1.05);
  }

  .result {
    font-weight: bold;
    margin-top: 20px;
    color: #27ae60;
  }

  img.start-button {
    width: 300px;
    height: 100px;
    object-fit: cover;
    border-radius: 15px;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(0,0,0,0.2);
  }

  img.start-button:hover {
    transform: scale(1.05);
  }

  img.start-button:active {
    transform: scale(0.95);
  }
</style>
</head>
<body>
  <div class="decision-container">
    <h1>Decision Tree for Modes of Procurement</h1>

    <!-- Progress bar -->
    <div class="progress-bar">
      <div class="progress-fill" id="progressFill"></div>
    </div>

    <!-- Home / Start screen -->
    <div id="homeContainer">
      <div class="options" style="height: 70vh; display: flex; justify-content: center; align-items: center;">
        <img src="START.png"
             class="start-button"
             alt="Start icon"
             onclick="startDecisionTree()"
             onerror="this.style.display='none';">
      </div>
    </div>

    <!-- Question area -->
    <div id="questionContainer" style="display: none;">
      <p id="questionText"></p>
      <div id="optionsContainer" class="options"></div>
    </div>

    <!-- Result area -->
    <div id="resultContainer" style="display: none;">
      <p id="resultText" class="result"></p>
      <button class="option-button" onclick="restartDecisionTree()">Restart</button>
    </div>
  </div>

<script>
  const decisionTree = {
    start: {
      question: "What type of procurement are you initiating?",
      options: {
        goods: { text: "Goods", next: "goods_previously" },
        infra: { text: "Infrastructure", next: "infra_previously" },
        consulting: { text: "Consulting Services", next: "consulting_previously" }
      }
    },
    goods_previously: {
      question: "Was the Good procured previously?",
      options: {
        yes: { text: "Yes", next: "need_to_action" },
        no: { text: "No", next: "result_direct" }
      }
    },
    need_to_action: {
      question: "Is there a need to improve efficiency or outcomes?",
      options: {
        yes: { text: "Yes", next: "result_innovation" },
        no: { text: "No", next: "result_regular" }
      }
    },
    result_direct: {
      result: "You may consider Direct Procurement (for unique or new goods)."
    },
    result_innovation: {
      result: "Consider Innovative Procurement mechanisms."
    },
    result_regular: {
      result: "Follow Regular Competitive Bidding."
    }
  };

  let currentNode = 'start';
  let userPath = [];

  function startDecisionTree() {
    document.getElementById('homeContainer').style.display = 'none';
    document.getElementById('questionContainer').style.display = 'block';
    currentNode = 'start';
    userPath = [];
    updateProgress();
    showQuestion();
  }

  function showQuestion() {
    const node = decisionTree[currentNode];
    const questionText = document.getElementById('questionText');
    const optionsContainer = document.getElementById('optionsContainer');

    questionText.textContent = node.question;
    optionsContainer.innerHTML = '';

    for (const key in node.options) {
      const option = document.createElement('button');
      option.textContent = node.options[key].text;
      option.classList.add('option-button');
      option.onclick = () => makeChoice(key);
      optionsContainer.appendChild(option);
    }
  }

  function makeChoice(choice) {
    const nodeData = decisionTree[currentNode];
    const selected = nodeData.options[choice];
    userPath.push(selected.text);
    currentNode = selected.next;
    updateProgress();

    if (currentNode.startsWith('result_')) {
      showResult();
    } else {
      showQuestion();
    }
  }

  function showResult() {
    document.getElementById('questionContainer').style.display = 'none';
    document.getElementById('resultContainer').style.display = 'block';
    document.getElementById('resultText').textContent = decisionTree[currentNode].result;
  }

  function restartDecisionTree() {
    document.getElementById('resultContainer').style.display = 'none';
    document.getElementById('homeContainer').style.display = 'block';
    document.getElementById('progressFill').style.width = '0%';
  }

  function updateProgress() {
    const progress = (userPath.length / 3) * 100;
    document.getElementById('progressFill').style.width = progress + '%';
  }
</script>
</body>
</html>
